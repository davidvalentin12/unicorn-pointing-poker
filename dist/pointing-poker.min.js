!function () {
    'use strict';
    angular.module('pointingPoker', ["firebase"]);
}(), function () {
    'use strict';
    angular.module('pointingPoker').provider('firebasePointingPokerService', function () {
        function o(o, e, n) {
            function i() {
                var e = {
                        apiKey: 'AIzaSyB816_FHDl69dqH_PJzH5FqR6mAUztq1cM',
                        authDomain: 'unicorn-pointing-poker.firebaseapp.com',
                        databaseURL: 'https://unicorn-pointing-poker.firebaseio.com',
                        storageBucket: 'unicorn-pointing-poker.appspot.com'
                    };
                o.initializeApp(e);
            }
            function t(o) {
                o.votesShown = !o.votesShown, o.$save();
            }
            function r(o, e) {
                o.vote = e, o.$save();
            }
            function s(i) {
                var t = n.defer(), r = o.database().ref().child('rooms/' + i), s = e(r);
                return s.$loaded().then(function () {
                    t.resolve(s);
                }), t.promise;
            }
            function u(n, i) {
                if (n.$id && i.$id) {
                    var t = o.database().ref().child('rooms/' + i.$id + '/users/' + n.$id), r = e(t);
                    r.$remove().then(function (o) {
                        console.log('user removed');
                    }, function (o) {
                        console.log('Removing Error:', o);
                    });
                }
            }
            function a(i, t) {
                var r = n.defer(), s = o.database().ref().child('rooms/' + t.$id + '/users/' + i), u = e(s);
                return c(u, i), u.$loaded().then(function () {
                    r.resolve(u);
                }), r.promise;
            }
            function c(o, e) {
                o.user = e, o.vote = null, o.$save();
            }
            var f = this;
            return f.initFirebaseConfig = i, f.getRoom = s, f.removeUser = u, f.createUser = a, f.userVote = r, f.toggleVotesShown = t, f;
        }
        o.$inject = ["firebase","$firebaseObject","$q"], this.$get = o;
    });
}(), function () {
    'use strict';
    function o(o, e, n) {
        function i(o) {
            c.selectedRoom = o, n.getRoom(o).then(function (o) {
                c.room = o;
            });
        }
        function t(o) {
            n.createUser(o, c.room).then(function (o) {
                c.user = o;
            });
        }
        function r() {
            n.removeUser(c.user, c.room);
        }
        function s(o, e) {
            n.userVote(o, e);
        }
        function u() {
            n.toggleVotesShown(c.room);
        }
        function a() {
            c.roomNumber = Math.floor(10000 * Math.random() + 1);
        }
        var c = this;
        c.user = {}, c.room = void 0, c.pointingValues = [.5,1,2,3,5,8,13,20,40,100,"?"], c.signIn = t, c.signOut = r, c.joinRoom = i, c.vote = s, c.toggleVotes = u, c.generateRandomRoomNumber = a, c.$onInit = function () {
            n.initFirebaseConfig(), e.onbeforeunload = function () {
                c.signOut();
            };
        };
    }
    o.$inject = ["firebase","$window","firebasePointingPokerService"], angular.module('pointingPoker').component('pointingPoker', {
        bindings: {},
        controller: o,
        controllerAs: 'pointingPokerCtrl',
        templateUrl: 'src/scripts/pointingPoker/pointingPoker.tpl.html'
    });
}();