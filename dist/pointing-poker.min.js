!function () {
    'use strict';
    angular.module('pointingPoker', ["firebase","ui.router","dvm.templates"]);
}(), function () {
    'use strict';
    angular.module('pointingPoker').config(["$stateProvider",function(o){o.state("app",{"abstract":!0,url:""}).state("app.join-room",{url:"/",views:{"content@":{template:"<pointing-poker-room-selection></pointing-poker-room-selection>"},"sidebar@":{template:"<pointing-poker-overview></pointing-poker-overview>"}}}).state("app.choose-name",{url:"/:roomNumber",views:{"content@":{template:"<pointing-poker-user-selection></pointing-poker-user-selection>"},"sidebar@":{template:"<pointing-poker-overview></pointing-poker-overview>"}}}).state("app.pointing",{url:"/:roomNumber/:userName",views:{"content@":{template:"<pointing-poker-pointing></pointing-poker-pointing>"},"sidebar@":{template:"<pointing-poker-overview></pointing-poker-overview>"}}})}]).run(["$rootScope","$state","$stateParams","$timeout",function(o,e,t,n){o.$state=e,o.$stateParams=t,n(function(){t.roomNumber||e.transitionTo("app.join-room")},500)}]);
}(), function () {
    'use strict';
    angular.module('pointingPoker').filter('reverse', function () {
        return function (o) {
            if (o)
                return o.slice().reverse();
        };
    });
}(), function () {
    'use strict';
    function o(o, e, t) {
        var n = this;
        n.$onInit = function () {
            t.initFirebaseConfig();
        };
    }
    o.$inject = ["firebase","$window","firebasePointingPokerService"], angular.module('pointingPoker').component('pointingPoker', {
        bindings: {},
        controller: o,
        controllerAs: 'pointingPokerCtrl',
        templateUrl: 'src/scripts/pointingPoker/pointingPoker.tpl.html'
    });
}(), function () {
    'use strict';
    function o(o, e, t, n, r) {
        function i() {
            s(), t.$watch(function () {
                return n.path();
            }, function (o, e) {
                s();
            });
        }
        function s() {
            r.roomNumber && o.getRoom(r.roomNumber).then(function (e) {
                m.room = e, o.createUser(r.userName, m.room).then(function (o) {
                    m.user = o, u();
                });
            });
        }
        function a() {
            m.chatVisible = !m.chatVisible, l();
        }
        function c(e) {
            '' != e && (m.room = o.sendMessage(m.room, m.user.$id, e), m.currentMessage = '', m.room.$save());
        }
        function u() {
            e.yOffset = 50, t.$watch(function () {
                return m.room.messages;
            }, function (o, e) {
                l();
            });
        }
        function l() {
            n.hash('go-unicorns'), e(), n.hash('');
        }
        var m = this;
        m.chatVisible = !1, m.toggleChatVisibility = a, m.sendMessage = c, m.$onInit = i;
    }
    o.$inject = ["firebasePointingPokerService","$anchorScroll","$rootScope","$location","$stateParams"], angular.module('pointingPoker').component('pointingPokerChat', {
        bindings: {},
        controller: o,
        controllerAs: 'pointingPokerChatCtrl',
        templateUrl: 'src/scripts/pointingPokerChat/pointingPokerChat.tpl.html'
    });
}(), function () {
    'use strict';
    function o() {
    }
    angular.module('pointingPoker').component('pointingPokerChatMessage', {
        bindings: {
            message: '<',
            user: '<',
            timestamp: '<',
            currentUser: '<'
        },
        controller: o,
        controllerAs: 'pointingPokerChatMessageCtrl',
        templateUrl: 'src/scripts/pointingPokerChatMessage/pointingPokerChatMessage.tpl.html'
    });
}(), function () {
    'use strict';
    function o() {
    }
    angular.module('pointingPoker').component('pointingPokerFooter', {
        bindings: {},
        controller: o,
        controllerAs: 'pointingPokerFooterCtrl',
        templateUrl: 'src/scripts/pointingPokerFooter/pointingPokerFooter.tpl.html'
    });
}(), function () {
    'use strict';
    function o() {
    }
    angular.module('pointingPoker').component('pointingPokerHeader', {
        bindings: {},
        controller: o,
        controllerAs: 'pointingPokerHeaderCtrl',
        templateUrl: 'src/scripts/pointingPokerHeader/pointingPokerHeader.tpl.html'
    });
}(), function () {
    'use strict';
    function o(o, e, t) {
        function n() {
            r();
        }
        function r() {
            o.getRoom(t.roomNumber).then(function (e) {
                u.room = e, o.createUser(t.userName, u.room).then(function (o) {
                    u.user = o, i();
                });
            });
        }
        function i() {
            e.$watch(function () {
                return u.room;
            }, function (o, e) {
                u.room && u.room.users && (u.voteSumary = s(u.room.users), a(u.room, u.voteSumary));
            }, !0);
        }
        function s(o) {
            var e = {};
            return angular.forEach(o, function (o) {
                void 0 == e[o.vote] ? e[o.vote] = {
                    amount: 1,
                    vote: o.vote
                } : e[o.vote].amount = e[o.vote].amount + 1;
            }), e;
        }
        function a(o, e) {
            var t = c(e);
            Object.keys(e).length > 0 && t ? (o.someoneVoted = !0, 1 == Object.keys(e).length && t ? o.totalAgreement = !0 : o.totalAgreement = !1) : o.someoneVoted = !1, u.room.$save();
        }
        function c(o) {
            var e = !1;
            return angular.forEach(o, function (o) {
                void 0 != o.vote && (e = !0);
            }), e;
        }
        var u = this;
        u.voteSumary = [], u.$onInit = n;
    }
    o.$inject = ["firebasePointingPokerService","$rootScope","$stateParams"], angular.module('pointingPoker').component('pointingPokerOverview', {
        bindings: {},
        controller: o,
        controllerAs: 'pointingPokerOverviewCtrl',
        templateUrl: 'src/scripts/pointingPokerOverview/pointingPokerOverview.tpl.html'
    });
}(), function () {
    'use strict';
    function o(o, e, t, n, r) {
        function i() {
            n.onbeforeunload = function () {
                v.signOut();
            }, e.$watch(function () {
                return t.path();
            }, function (o, e) {
                f(o, e);
            }), p();
        }
        function s() {
            r.removeUser(v.user, v.room);
        }
        function a(o, e) {
            v.user = r.userVote(o, e), v.user.$save();
        }
        function c() {
            v.room = r.resetVotes(v.room), v.room = r.toggleVoting(v.room, !1), v.room.$save();
        }
        function u() {
            v.room = r.toggleVoting(v.room, !1), v.room = r.toggleVotesShown(v.room), v.room.$save();
        }
        function l() {
            v.room = r.toggleVotesShown(v.room, !1), v.room = r.toggleVoting(v.room, !0), v.room.$save();
        }
        function m() {
            v.room.someoneVoted ? (r.toggleVoting(v.room, !0), r.toggleVotesShown(v.room, !0), v.room.$save()) : alert('No, no, I\'m sorry to disappoint you but you can\'t get to an agreement without any votes :(');
        }
        function g() {
            r.toggleVotesShown(v.room, !1), r.toggleVoting(v.room, !1), r.resetVotes(v.room), v.room.$save();
        }
        function p() {
            void 0 != v.user && '' != v.user && v.signOut(), r.getRoom(o.roomNumber).then(function (e) {
                v.room = e, r.createUser(o.userName, v.room).then(function (o) {
                    v.user = o;
                });
            });
        }
        function f(o, e) {
            var t = o.split('/'), n = e.split('/');
            t[2] != n[2] && r.getRoom(n[1]).then(function (o) {
                r.createUser(n[2], n[1]).then(function (e) {
                    r.removeUser(e, o);
                });
            });
        }
        var v = this;
        v.pointingValues = [.5,1,2,3,5,8,13,20,40,100,"?"], v.$onInit = i, v.signOut = s, v.vote = a, v.toggleVotes = u, v.resetVotes = c, v.toggleVoting = l, v.agreement = m, v.explainStory = g;
    }
    o.$inject = ["$stateParams","$rootScope","$location","$window","firebasePointingPokerService"], angular.module('pointingPoker').component('pointingPokerPointing', {
        bindings: {},
        controller: o,
        controllerAs: 'pointingPokerPointingCtrl',
        templateUrl: 'src/scripts/pointingPokerPointing/pointingPokerPointing.tpl.html'
    });
}(), function () {
    'use strict';
    function o(o, e) {
        function t() {
            r.roomNumber = Math.floor(10000 * Math.random() + 1);
        }
        function n(o) {
            r.selectedRoom = o, '' != o && void 0 != o ? e.transitionTo('app.choose-name', { roomNumber: o }) : alert('You don\'t want to  join that room, trust me, you don\'t :$');
        }
        var r = this;
        r.generateRandomRoomNumber = t, r.joinRoom = n;
    }
    o.$inject = ["firebasePointingPokerService","$state"], angular.module('pointingPoker').component('pointingPokerRoomSelection', {
        bindings: {},
        require: { pointingPokerCtrl: '^pointingPoker' },
        controller: o,
        controllerAs: 'pointingPokerRoomSelectionCtrl',
        templateUrl: 'src/scripts/pointingPokerRoomSelection/pointingPokerRoomSelection.tpl.html'
    });
}(), function () {
    'use strict';
    angular.module('pointingPoker').provider('firebasePointingPokerService', function () {
        function o(o, e, t) {
            function n() {
                var e = {
                        apiKey: 'AIzaSyB816_FHDl69dqH_PJzH5FqR6mAUztq1cM',
                        authDomain: 'unicorn-pointing-poker.firebaseapp.com',
                        databaseURL: 'https://unicorn-pointing-poker.firebaseio.com',
                        storageBucket: 'unicorn-pointing-poker.appspot.com'
                    };
                o.initializeApp(e);
            }
            function r(o, e, t) {
                var n = {
                        message: t,
                        userName: e,
                        timestamp: new Date().getTime()
                    };
                return o.messages || (o.messages = []), o.messages.push(n), o;
            }
            function i(o, e) {
                return o.votesShown = !o.votesShown, void 0 != e && (o.votesShown = e), o;
            }
            function s(o) {
                return angular.forEach(o.users, function (o) {
                    o.vote = null;
                }), o.votesShown = !1, o.someoneVoted = !1, o.totalAgreement = !1, o;
            }
            function a(o, e) {
                return o.votingInitialized = !o.votingInitialized, void 0 != e && (o.votingInitialized = e), o;
            }
            function c(o, e) {
                return o.vote = e, o;
            }
            function u(n) {
                var r = t.defer(), i = o.database().ref().child('rooms/' + n), s = e(i);
                return s.$loaded().then(function () {
                    r.resolve(s);
                }), r.promise;
            }
            function l(t, n) {
                if (t.$id && n.$id) {
                    var r = o.database().ref().child('rooms/' + n.$id + '/users/' + t.$id), i = e(r);
                    i.$remove().then(function (o) {
                        console.log('user removed');
                    }, function (o) {
                        console.log('Removing Error:', o);
                    });
                }
            }
            function m(n, r) {
                var i = t.defer(), s = o.database().ref().child('rooms/' + r.$id + '/users/' + n), a = e(s);
                return g(a, n), a.$loaded().then(function () {
                    i.resolve(a);
                }), i.promise;
            }
            function g(o, e) {
                o.user = e, o.vote = null, o.$save();
            }
            var p = this;
            return p.initFirebaseConfig = n, p.getRoom = u, p.removeUser = l, p.createUser = m, p.userVote = c, p.resetVotes = s, p.toggleVoting = a, p.toggleVotesShown = i, p.sendMessage = r, p;
        }
        o.$inject = ["firebase","$firebaseObject","$q"], this.$get = o;
    });
}(), function () {
    'use strict';
    function o(o, e, t) {
        function n(t) {
            '' != t && void 0 != t ? e.transitionTo('app.pointing', {
                roomNumber: o.roomNumber,
                userName: t
            }) : alert('That can\'t be your name, don\'t lie to me. pls D:');
        }
        var r = this;
        r.signIn = n;
    }
    o.$inject = ["$stateParams","$state","firebasePointingPokerService"], angular.module('pointingPoker').component('pointingPokerUserSelection', {
        bindings: {},
        require: { pointingPokerCtrl: '^pointingPoker' },
        controller: o,
        controllerAs: 'pointingPokerUserSelectionCtrl',
        templateUrl: 'src/scripts/pointingPokerUserSelection/pointingPokerUserSelection.tpl.html'
    });
}();